#!/usr/bin/env node

const http = require('http')
const chalk = require('chalk')

const app  = require('../index.js')
const CONFIG = require('../config.js')

app.set('port', CONFIG.PORT)

// Catch 404 and forward to error handler
app.use((req, res, next) => {
  console.log(chalk.red(`[express] Could not find ${req.url}`))

  const err = new Error('Not Found')
  err.status = 404
  next(err)
})

app.use((err, req, res) => {
  const status = err.status || 500
  const message = err.message.split('\n')

  console.error(err.stack)

  res.status(status)
  res.render('error', {
    status,
    message: message.length > 1 ? message.slice(-1) : message[0],
    error: app.get('env') === 'production' ? {} : err,
  })
})

const server = http.createServer(app)

server.listen(CONFIG.PORT, () => console.log(`[express] Server started on port ${CONFIG.PORT}`))

server.on('error', error => {
  if (error.syscall !== 'listen') throw error

  switch (error.code) {
    case 'EACCES':
      console.error(`${CONFIG.PORT} requires elevated privileges`)
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(`${CONFIG.PORT} is already in use`)
      process.exit(1)
      break
    default:
      throw error
  }
})

